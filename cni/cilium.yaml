---
# Source: cilium/charts/cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHhheXNNOUpvR1EzVlFvV25lanh6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFd01qQXdNRFExV2hjTk1qWXdNekE1TWpBdwpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzl1YVEzOTJGM0I0dFZLZHdpM2tpbUtnbmRCRFVQMXNuREY3MTNISUk0MEg4OTNlaTgKNEJvTHNlNHN1ckVJZENYY0thY2RMMU1LN0U0YjZwd29oTFR4T1M3eHIwc1ZabjFkNFc5N1FvT1hMNmhsU3FZYQpKY2JFckFXYzdjdWxCT0k4VFpVK1pJTGdYMmY2M1BWRVBxL29uMlBkUlRDQStZZlhORTNiZVBwcWFTVHpxdGMxCjhJbmJpNndRMjE2NkJYZWF5YVgzYnZYWkpxUzJRWHZoQXBZd2NtOThKd0xySktiR3QveGNpVnExMlNXaStLNWoKU0ZUTkh4UEhuUHJaS3RRZzAzSllLVS92aHJOZklNZXN5TFpGSmFqR05VS1F0OEJ0S0gxVlZLSGxEbGUvcHZPUgorSlBiU1ZpdkdxOFNDdDkyV0V5UXBxVldwSUN0TitwNGQ3M0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuVFFFOGI1YjlPN25hekQ5WGx2SENKVFdNYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRXIwUmpvNWhCSEIrbUxSNWFNVkhYUC9DbXlRSG9samRZMU1XQlAvVjViclp1MWpDcnBRR0RHCjliaURDYUNBelNtY2lVMlZjNHdPN0czUXZqMjY2YTdXdkgzZ2tDVS9SdWsrTElNYjM4UHB3UXhqZXc5SDlRaTQKR0VNUVBLRVg2eDFqQVp2Nm1lWUJ6ZEVRcURLakovbmd3dHhnN3V4UC8yVlJuMzIvOEI0R2FaVmYyOVpteGZNcApaS29iMlQrYlcvMWprd09ia3NRZ0dLTVZDbytMQ3Jqd3FEeGZtS0s0TTZXNHZVSkt6TXVCRUZoMFZjbmN0TTNUCmI0MVRsVnlmejg3Z1ZiYm9pQjlwRHF6Q2N2QlcyRnpaWjNLQWpTM1laekZoQ2ZROHFaNGFjMm9IN3RBUXFFMEEKenJFM296MmNDYk1BMEdQRXhLRS80MUxBQUVRb3NCbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmJta04vZGhkd2VMVlNuY0l0NUlwaW9KM1FRMUQ5Ykp3eGU5ZHh5Q09OQi9QZDNvCnZPQWFDN0h1TExxeENIUWwzQ21uSFM5VEN1eE9HK3FjS0lTMDhUa3U4YTlMRldaOVhlRnZlMEtEbHkrb1pVcW0KR2lYR3hLd0ZuTzNMcFFUaVBFMlZQbVNDNEY5bit0ejFSRDZ2Nko5ajNVVXdnUG1IMXpSTjIzajZhbWtrODZyWApOZkNKMjR1c0VOdGV1Z1YzbXNtbDkyNzEyU2FrdGtGNzRRS1dNSEp2ZkNjQzZ5U214cmY4WElsYXRka2xvdml1ClkwaFV6UjhUeDV6NjJTclVJTk55V0NsUDc0YXpYeURIck1pMlJTV294alZDa0xmQWJTaDlWVlNoNVE1WHY2YnoKa2ZpVDIwbFlyeHF2RWdyZmRsaE1rS2FsVnFTQXJUZnFlSGU5d1FJREFRQUJBb0lCQVFDc1d3YWR0VVc4ellTOQpsRzZnMnBEaksxT1VqbXJwL2JXRFg0REd3WVpudUxtdmFYWXloK0FCZWQ0bWtsK2JqM0NKaHVtRE1PZmZCM2VhCkV0TlVWK0xOTmFhNDl3ZGQ1S0xGYzdSRUpOUEl1QW5pSXlPc28xN2tjbVlTLzFBK2xLWTJKRUVOMGwrM0Y5VXQKYUNnRW5ISlFBT1RITWtEekdqMVd1dlIwQ241cnhaQktva0RjMGRSaE9PTzNaYTlSUXh0ZEhvOXlIUmdmSXBOawpseUttQUVRNUZvbVhKejFOU0llczgxa1FhOGE3Tm01ZmNuaWx1VjdPUENRNml4RmwzOFR6RXptYWsrU1RPcGVFCnBrdDdOY2F4U3RqcUwrUnBUY3hkVmpqOXhEQ01UU1AxbUFmU2FOTDNCL2VUL1d4WGw0ZENsajRQWEJQQjVNSXAKNkxUSi9WUUZBb0dCQVBhNnBObDhPWm8wcnJuazNLb25CVVh5Y0gwMHplYXhLUU1aRU5RbWJKTHpnZEg0NTExSgpHTkcrNmQ4OHpoSFlmazBBSHQxQVBEMHI4TXk3dlU3UXRCcFhQT3c4Mjc0UzdZNElDQ1lOckRwOS9JS0ErQ056CkR0MFpQQ3RIYTNETEcrUEE4Wi9wQlR5cUVKOXJldWtDQXphNVhYVW5veFU0L1NYL1FrTWV5RFZuQW9HQkFNVGEKcVRHb244QWhNbVdwQS95ZmFJWFVtQko0cE1YMFlxSG4yK01RNzVZS3VqR0pTRE9sWnB4VzJFWTBwOE0rSDBwMApJQVVuMWxJSUprR2Q5Ykl4NnZvbkRIaFVycTFHNm1BWG9JR0ZZQ1YxVDVKeENzanpTL1lNZkx2WkN5TkRLSHo0ClNlYmt1RTV2SVkyeHFWZjlvcjhrNnZzWGtNeXQ1eHl5MjVCRUNSS1hBb0dBSEl4R0RNQVo3aVRRWHNRRFlGQzUKaEhsajJLam1kaDNqais4emlraVQ0WUQ1Y1hFcVhCbmNIRkRKd01ISldqbEJpK2xLcVBFSXgwOHhRbzhxZlZjYQpyNzJPV0F0R3BieU03aFV4MUMxYTB6M0duTmNOWHhTdUVKa2Q1Q2dVWDIydzRXNXV4c0R3a1M5Z1V3SGRxOTVHCnZ1czl6Qk4xQkR5ZTFlbXVJaFFLdUZzQ2dZQlhPazBlcEFtbHFSQWIyL2pZU0FxWXdzdGY0L1dmZ2RyeXd6cTgKTXhUMjkybnA2VnNGQjVXZ1VSc2tnTkNWdzBFNlRKcWpyak5aeGlLdGtNRCtaUUFxT0lOZURxZ1lRQVE2OEQwLwpKMHFqVG9najY5TkxtQU5nMDhleHRVc3FKT2diK0NsSEZySlVqd25mTDRwS1l5bHFhWUYySWNzWDV6Y3hrRSthCmJZdFhvUUtCZ1FEUHU5V2ZxVEdjQTl1THlHUFFEYWRLaUdXR1ViS0tIaDVhWFdIMjJnQzVUWU55L3JxZmozblUKM3Exc3dpK2hTQmp4QnB2UmlhU3R6TFo5cTF5cVJQTEU4Qzc5aDYyd3duWEJ4QWlZRmZGUUFJRFhwbUNoTWZCUQpFY01RbEFSK2F3UHpOWUNJWHVXaUlaZFBxbXozazlCL3BXdWt6V3E1b3BYWHFQTGhKU3V1emc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHhheXNNOUpvR1EzVlFvV25lanh6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFd01qQXdNRFExV2hjTk1qWXdNekE1TWpBdwpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzl1YVEzOTJGM0I0dFZLZHdpM2tpbUtnbmRCRFVQMXNuREY3MTNISUk0MEg4OTNlaTgKNEJvTHNlNHN1ckVJZENYY0thY2RMMU1LN0U0YjZwd29oTFR4T1M3eHIwc1ZabjFkNFc5N1FvT1hMNmhsU3FZYQpKY2JFckFXYzdjdWxCT0k4VFpVK1pJTGdYMmY2M1BWRVBxL29uMlBkUlRDQStZZlhORTNiZVBwcWFTVHpxdGMxCjhJbmJpNndRMjE2NkJYZWF5YVgzYnZYWkpxUzJRWHZoQXBZd2NtOThKd0xySktiR3QveGNpVnExMlNXaStLNWoKU0ZUTkh4UEhuUHJaS3RRZzAzSllLVS92aHJOZklNZXN5TFpGSmFqR05VS1F0OEJ0S0gxVlZLSGxEbGUvcHZPUgorSlBiU1ZpdkdxOFNDdDkyV0V5UXBxVldwSUN0TitwNGQ3M0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuVFFFOGI1YjlPN25hekQ5WGx2SENKVFdNYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRXIwUmpvNWhCSEIrbUxSNWFNVkhYUC9DbXlRSG9samRZMU1XQlAvVjViclp1MWpDcnBRR0RHCjliaURDYUNBelNtY2lVMlZjNHdPN0czUXZqMjY2YTdXdkgzZ2tDVS9SdWsrTElNYjM4UHB3UXhqZXc5SDlRaTQKR0VNUVBLRVg2eDFqQVp2Nm1lWUJ6ZEVRcURLakovbmd3dHhnN3V4UC8yVlJuMzIvOEI0R2FaVmYyOVpteGZNcApaS29iMlQrYlcvMWprd09ia3NRZ0dLTVZDbytMQ3Jqd3FEeGZtS0s0TTZXNHZVSkt6TXVCRUZoMFZjbmN0TTNUCmI0MVRsVnlmejg3Z1ZiYm9pQjlwRHF6Q2N2QlcyRnpaWjNLQWpTM1laekZoQ2ZROHFaNGFjMm9IN3RBUXFFMEEKenJFM296MmNDYk1BMEdQRXhLRS80MUxBQUVRb3NCbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmJta04vZGhkd2VMVlNuY0l0NUlwaW9KM1FRMUQ5Ykp3eGU5ZHh5Q09OQi9QZDNvCnZPQWFDN0h1TExxeENIUWwzQ21uSFM5VEN1eE9HK3FjS0lTMDhUa3U4YTlMRldaOVhlRnZlMEtEbHkrb1pVcW0KR2lYR3hLd0ZuTzNMcFFUaVBFMlZQbVNDNEY5bit0ejFSRDZ2Nko5ajNVVXdnUG1IMXpSTjIzajZhbWtrODZyWApOZkNKMjR1c0VOdGV1Z1YzbXNtbDkyNzEyU2FrdGtGNzRRS1dNSEp2ZkNjQzZ5U214cmY4WElsYXRka2xvdml1ClkwaFV6UjhUeDV6NjJTclVJTk55V0NsUDc0YXpYeURIck1pMlJTV294alZDa0xmQWJTaDlWVlNoNVE1WHY2YnoKa2ZpVDIwbFlyeHF2RWdyZmRsaE1rS2FsVnFTQXJUZnFlSGU5d1FJREFRQUJBb0lCQVFDc1d3YWR0VVc4ellTOQpsRzZnMnBEaksxT1VqbXJwL2JXRFg0REd3WVpudUxtdmFYWXloK0FCZWQ0bWtsK2JqM0NKaHVtRE1PZmZCM2VhCkV0TlVWK0xOTmFhNDl3ZGQ1S0xGYzdSRUpOUEl1QW5pSXlPc28xN2tjbVlTLzFBK2xLWTJKRUVOMGwrM0Y5VXQKYUNnRW5ISlFBT1RITWtEekdqMVd1dlIwQ241cnhaQktva0RjMGRSaE9PTzNaYTlSUXh0ZEhvOXlIUmdmSXBOawpseUttQUVRNUZvbVhKejFOU0llczgxa1FhOGE3Tm01ZmNuaWx1VjdPUENRNml4RmwzOFR6RXptYWsrU1RPcGVFCnBrdDdOY2F4U3RqcUwrUnBUY3hkVmpqOXhEQ01UU1AxbUFmU2FOTDNCL2VUL1d4WGw0ZENsajRQWEJQQjVNSXAKNkxUSi9WUUZBb0dCQVBhNnBObDhPWm8wcnJuazNLb25CVVh5Y0gwMHplYXhLUU1aRU5RbWJKTHpnZEg0NTExSgpHTkcrNmQ4OHpoSFlmazBBSHQxQVBEMHI4TXk3dlU3UXRCcFhQT3c4Mjc0UzdZNElDQ1lOckRwOS9JS0ErQ056CkR0MFpQQ3RIYTNETEcrUEE4Wi9wQlR5cUVKOXJldWtDQXphNVhYVW5veFU0L1NYL1FrTWV5RFZuQW9HQkFNVGEKcVRHb244QWhNbVdwQS95ZmFJWFVtQko0cE1YMFlxSG4yK01RNzVZS3VqR0pTRE9sWnB4VzJFWTBwOE0rSDBwMApJQVVuMWxJSUprR2Q5Ykl4NnZvbkRIaFVycTFHNm1BWG9JR0ZZQ1YxVDVKeENzanpTL1lNZkx2WkN5TkRLSHo0ClNlYmt1RTV2SVkyeHFWZjlvcjhrNnZzWGtNeXQ1eHl5MjVCRUNSS1hBb0dBSEl4R0RNQVo3aVRRWHNRRFlGQzUKaEhsajJLam1kaDNqais4emlraVQ0WUQ1Y1hFcVhCbmNIRkRKd01ISldqbEJpK2xLcVBFSXgwOHhRbzhxZlZjYQpyNzJPV0F0R3BieU03aFV4MUMxYTB6M0duTmNOWHhTdUVKa2Q1Q2dVWDIydzRXNXV4c0R3a1M5Z1V3SGRxOTVHCnZ1czl6Qk4xQkR5ZTFlbXVJaFFLdUZzQ2dZQlhPazBlcEFtbHFSQWIyL2pZU0FxWXdzdGY0L1dmZ2RyeXd6cTgKTXhUMjkybnA2VnNGQjVXZ1VSc2tnTkNWdzBFNlRKcWpyak5aeGlLdGtNRCtaUUFxT0lOZURxZ1lRQVE2OEQwLwpKMHFqVG9najY5TkxtQU5nMDhleHRVc3FKT2diK0NsSEZySlVqd25mTDRwS1l5bHFhWUYySWNzWDV6Y3hrRSthCmJZdFhvUUtCZ1FEUHU5V2ZxVEdjQTl1THlHUFFEYWRLaUdXR1ViS0tIaDVhWFdIMjJnQzVUWU55L3JxZmozblUKM3Exc3dpK2hTQmp4QnB2UmlhU3R6TFo5cTF5cVJQTEU4Qzc5aDYyd3duWEJ4QWlZRmZGUUFJRFhwbUNoTWZCUQpFY01RbEFSK2F3UHpOWUNJWHVXaUlaZFBxbXozazlCL3BXdWt6V3E1b3BYWHFQTGhKU3V1emc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHhheXNNOUpvR1EzVlFvV25lanh6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFd01qQXdNRFExV2hjTk1qWXdNekE1TWpBdwpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzl1YVEzOTJGM0I0dFZLZHdpM2tpbUtnbmRCRFVQMXNuREY3MTNISUk0MEg4OTNlaTgKNEJvTHNlNHN1ckVJZENYY0thY2RMMU1LN0U0YjZwd29oTFR4T1M3eHIwc1ZabjFkNFc5N1FvT1hMNmhsU3FZYQpKY2JFckFXYzdjdWxCT0k4VFpVK1pJTGdYMmY2M1BWRVBxL29uMlBkUlRDQStZZlhORTNiZVBwcWFTVHpxdGMxCjhJbmJpNndRMjE2NkJYZWF5YVgzYnZYWkpxUzJRWHZoQXBZd2NtOThKd0xySktiR3QveGNpVnExMlNXaStLNWoKU0ZUTkh4UEhuUHJaS3RRZzAzSllLVS92aHJOZklNZXN5TFpGSmFqR05VS1F0OEJ0S0gxVlZLSGxEbGUvcHZPUgorSlBiU1ZpdkdxOFNDdDkyV0V5UXBxVldwSUN0TitwNGQ3M0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuVFFFOGI1YjlPN25hekQ5WGx2SENKVFdNYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRXIwUmpvNWhCSEIrbUxSNWFNVkhYUC9DbXlRSG9samRZMU1XQlAvVjViclp1MWpDcnBRR0RHCjliaURDYUNBelNtY2lVMlZjNHdPN0czUXZqMjY2YTdXdkgzZ2tDVS9SdWsrTElNYjM4UHB3UXhqZXc5SDlRaTQKR0VNUVBLRVg2eDFqQVp2Nm1lWUJ6ZEVRcURLakovbmd3dHhnN3V4UC8yVlJuMzIvOEI0R2FaVmYyOVpteGZNcApaS29iMlQrYlcvMWprd09ia3NRZ0dLTVZDbytMQ3Jqd3FEeGZtS0s0TTZXNHZVSkt6TXVCRUZoMFZjbmN0TTNUCmI0MVRsVnlmejg3Z1ZiYm9pQjlwRHF6Q2N2QlcyRnpaWjNLQWpTM1laekZoQ2ZROHFaNGFjMm9IN3RBUXFFMEEKenJFM296MmNDYk1BMEdQRXhLRS80MUxBQUVRb3NCbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUXNDV2F4UzZFOVVCUVdDbzN3UmdiREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFd01qQXdNRFExV2hjTk1qWXdNekE1TWpBdwpNRFExV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQmdPdDNRZUluYWJJNXNxZHJWYWxjY1JoM3RzRnIKZUQ2UW9Jd2xlU2lHazlleGlQNUg2K1R6SnY4Z05UUVV5eGJTdlVRbXVNUlQrTjN2bnNZSlBOTGREOHovayt2ZwpOUEdYZTlpekdFcXRaZDNsL0hmRWxQeEJySnk4L2ttWmo5WWdPMTVLWjlHVGdXVmFQdFNST0ZwUTB4SldSUDZmCkNnMEMzSG1JZXhibXpnL0RZRkhCdUh4Q1hpdFpQYngxZksvdkMvWkxwTUplUm9nQ1lKU0svWnhjUmk4ZXlmMFUKTFZ5VVNxejFXNklCc0NiejRiNnVQb2swbkFnU2Y0N2M0T3RrWG0zRk1pbnNiV0pUUXVsNVRxOGxQN2czc0JaTwo0OTZkb1YrejRuMm1teFVJTnAwVlJNdGdHQm1kM1l0SHZxb3JoeFNHNUlIa0hURENMSlUxZS80dEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZKMDBCUEcrVy9UdTUyc3cvVjVieHdpVQoxakd1TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFwRWJMdlJ4L1lGMnN3cUV1NkpnZWg3MVdLcU9NWjRDa0FyQm12MnVmL04wQ3VuQVYKQXVLTGM4MlBZaFRxYUJuZnVLRVJoYWdGQ1ZXL0dUa1ArN05ERllHUGVqdHJwb3dXWHQ1ZTVtMjNJd3lmSXRkRgpXSWxtMGJPM0piTFNNdnRFZjM4U1VsZlpub0dzOUprTzB1T2ovWHVVNDZGYjlLaURlZ1NBc1VMdldJRTQ0M1k0CkFXd0RzNE9qZUlKcnpoMGdMZFE5eHZ5QlExQzNSZE11Y0dWZmhxbzNCNE9lb1JqeTNiY2cwOVpIci81cU1yenYKdGF5NDJmMHJyanBhM1pPWjVuUnhtaExaYTdaUHlMMHJnVW1HbjhNVFFkM0kwOTdETXF1MHBXUHFhMnVTZ1JBVQprWS9BQjdzMURxZE1sVjNnZUdJUUJoOTluMTVlRDZ4MlFLTUw4QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1lEcmQwSGlKMm15T2JLbmExV3BYSEVZZDdiQmEzZytrS0NNSlhrb2hwUFhzWWorClIrdms4eWIvSURVMEZNc1cwcjFFSnJqRVUvamQ3NTdHQ1R6UzNRL00vNVByNERUeGwzdllzeGhLcldYZDVmeDMKeEpUOFFheWN2UDVKbVkvV0lEdGVTbWZSazRGbFdqN1VrVGhhVU5NU1ZrVCtud29OQXR4NWlIc1c1czRQdzJCUgp3Ymg4UWw0cldUMjhkWHl2N3d2MlM2VENYa2FJQW1DVWl2MmNYRVl2SHNuOUZDMWNsRXFzOVZ1aUFiQW04K0crCnJqNkpOSndJRW4rTzNPRHJaRjV0eFRJcDdHMWlVMExwZVU2dkpUKzRON0FXVHVQZW5hRmZzK0o5cHBzVkNEYWQKRlVUTFlCZ1puZDJMUjc2cUs0Y1VodVNCNUIwd3dpeVZOWHYrTFFJREFRQUJBb0lCQUVjV0lXcXlYVzYxT2JCUQpuWWlrODQ3dVRWck5YTWtxWjNHaVNWb0s1SVJzRTdVNDZwRnBhN2FZQU9uSUlkWHh0ZlM5YXlmK2dNR0lqNS9UCjZGVEViNEtlcDJUTTVyNTdOTFc5M2FJTnJvRjlCc1BTdC8wVDdvZ0I3YUxRbUNFOTRoLzlMMnFPTVVQTEtYeTUKMEVWNU9sU3U5ZkdUYnlibC9sbXF2VXNTVFJ1RXZFM3M0ZVRKQTQrcjN0bm1idW9VRng3VkI1OEdSeW9Jd01rMwpKdmtRdjlucHE2cDZsVDBPUktTVW5MUnhqek5oK0lOL2lpb3BtNzU3RmdjVTVzekVRaktmL2pGWVZFanlraUJXCmtYZ1dyTmJZMXJJRTZBNzlmSDRMSW9vUXRWUlRrakVmcnd4eFVaOVY0YmMyYXFWaXdXazhKS3l4V1VIUXE4OWMKM0JHVUN3RUNnWUVBMXlqVUE2UDQzREI1YXR4aUpyS0twTE5Wam45dTdKL0w2M3R1aGRqUXc2Y0xPTlhEQTFyUQptbVpUYXltdk9LUFJ1Y0tGSG84VDZoZGN3NjJyZ2w1bWhDaWhlSXpJZGdWNjIwd096Z0hiay9rUnhjMHBkNnAyCkNVTndCNjI5QTFvUVJ6dnRCalpWSDZKTHZSQSs0d1NWMWR5ME5UWTRSWVZaNUR5N3oyRERnMzBDZ1lFQTVqdkcKTVc2U0o2ZVIxSXRETHlzK2xyVURHMmpndjJsVXIzbTMvODYzazNybkhWN2RZZGlnNjFINklyR0k1ckxLOHE5aQpMZktqVHBtcVpscVc2UXdUdmZmS2p6Ymx3RTdTbUlVMzZudnArU0Y4Y2MvQmx1Y1Bhdndkc0JoUXlCOGJ4TVlaCnNrMTVFZHFPSUVZVVhiUzBlWUNSMGhRcnVka3hKRWtmZ0ExMUJIRUNnWUVBd2pHd2dnU3FKWnArekF0VGIxZncKT00wLzZGaHVOcFhYeUpka1h0d2RPS241UC9mM2hueWVFTzFRVjBXTlI5TGNCUXhqZC94dFhmaHVHcE1TWEoxMQphOHo4U0VEUTRXejZ3Um01dHdnSU5sczBSbEp4SGZlMWg1RGRlYUMvRzFwYm5OK2lnOXZnSXFncU1kK0swdjJkCmV5UXpabCtrbEdMU2ltU2lvbjdVbUVVQ2dZRUFvN0YwSk1rODJUem5EbnRGZFZBRjNCa3U4Rm9ORVlyT1QwVDMKY2NXRCtETzJCc2ZnRnlWeXBGMVF2MElDMkNQZTc5V0t0S2lETytzOW9EQmdnNm0yajZhU09ta0p5VVZCcm5kcApYaXBrSEdHV25VVGRtM0VGSVVmSHcrQkY3ME5POXdUeVdEZUZFUkNYWkpMdkFBRHZJRVF0YVhRMThwbGR1ekxTClZyVTZzY0VDZ1lCWFJYTWFTYXV4Z3Y4ci9uSit2L202TC9lRWlwaVpXSUJVUWVIZzh2ZWJvMzdXQW9mTWZXSXcKZ0JINWNtQW9vMURMaGJ3WDdOdTEySE5aVGVkeEdpNnhmMlh2Tmk3QjYyQXVmeTVMMWQrMFpvR3dad1F6OEQydApFNG9EcHRnc05WY0diWlVUYnYreER5cVdJVmlmTE1xR0UwS3NiQXYxSXNJaXZoOWpOT0lZeHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHhheXNNOUpvR1EzVlFvV25lanh6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFd01qQXdNRFExV2hjTk1qWXdNekE1TWpBdwpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzl1YVEzOTJGM0I0dFZLZHdpM2tpbUtnbmRCRFVQMXNuREY3MTNISUk0MEg4OTNlaTgKNEJvTHNlNHN1ckVJZENYY0thY2RMMU1LN0U0YjZwd29oTFR4T1M3eHIwc1ZabjFkNFc5N1FvT1hMNmhsU3FZYQpKY2JFckFXYzdjdWxCT0k4VFpVK1pJTGdYMmY2M1BWRVBxL29uMlBkUlRDQStZZlhORTNiZVBwcWFTVHpxdGMxCjhJbmJpNndRMjE2NkJYZWF5YVgzYnZYWkpxUzJRWHZoQXBZd2NtOThKd0xySktiR3QveGNpVnExMlNXaStLNWoKU0ZUTkh4UEhuUHJaS3RRZzAzSllLVS92aHJOZklNZXN5TFpGSmFqR05VS1F0OEJ0S0gxVlZLSGxEbGUvcHZPUgorSlBiU1ZpdkdxOFNDdDkyV0V5UXBxVldwSUN0TitwNGQ3M0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuVFFFOGI1YjlPN25hekQ5WGx2SENKVFdNYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIRXIwUmpvNWhCSEIrbUxSNWFNVkhYUC9DbXlRSG9samRZMU1XQlAvVjViclp1MWpDcnBRR0RHCjliaURDYUNBelNtY2lVMlZjNHdPN0czUXZqMjY2YTdXdkgzZ2tDVS9SdWsrTElNYjM4UHB3UXhqZXc5SDlRaTQKR0VNUVBLRVg2eDFqQVp2Nm1lWUJ6ZEVRcURLakovbmd3dHhnN3V4UC8yVlJuMzIvOEI0R2FaVmYyOVpteGZNcApaS29iMlQrYlcvMWprd09ia3NRZ0dLTVZDbytMQ3Jqd3FEeGZtS0s0TTZXNHZVSkt6TXVCRUZoMFZjbmN0TTNUCmI0MVRsVnlmejg3Z1ZiYm9pQjlwRHF6Q2N2QlcyRnpaWjNLQWpTM1laekZoQ2ZROHFaNGFjMm9IN3RBUXFFMEEKenJFM296MmNDYk1BMEdQRXhLRS80MUxBQUVRb3NCbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRSWpYZWs3NnVmN0JnMUhMdmZGbWVHekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFd01qQXdNRFExV2hjTk1qWXdNekE1TWpBdwpNRFExV2pBd01TNHdMQVlEVlFRRERDVXFMbXM0Y3kxMWN5MWxZWE4wTFRFdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2QzlhWnQzRjBBNXQKOW5nNThCeWo2bEo0VVBabmRGVnVETmlreDM2ei81QUxQRlIwL0RLVFdhZ2R6REhJUzRyTFpKbW9ieUI4OTVSQQpYMDFwUTVtNUEvelBSYW1GMDRsVTNtcEFlVXg5VE43aW5VNHZLNTVzREtTVlVvUXRsV3Fhc2M1N285OTdzeHhaCmlCd0JEcU56YjlPU0NzRlRTZW93L0VkaUlrcFVvSkhDeVVwcmd0anlZUHFzQkFMY1V2Ukp0U3FtRWdMUEg3TmQKYnEwQnB3UUJJY1lYOW1aeUJLTFRyWnZkdTRWbERqSVhVTEk3Z255dGpEOHV4TTFXTndXVlYyS09OckUzREFRegp3STk2Y0M2SFdZUW85NUQ2cER6UjRwaEhNeElyZDBIZ2Y5RkFpTVMvZ0NSdkk0UDIwQUVCNFdJRUVVS2tlcld0CmlzWGpFMHRSVndJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNkTkFUeAp2bHYwN3Vkck1QMWVXOGNJbE5ZeHJqQXdCZ05WSFJFRUtUQW5naVVxTG1zNGN5MTFjeTFsWVhOMExURXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtqM1NzelJGSnlrRmwKVTJwOU0vZThRY2dHSmk1dExEWVRYZnEyUVF5SGttdUdUb081US9VaWU2TkhqRjZYSmhodVVWM2ZLcE45bFZIVgpWeXlEa0dGVnBENkVvSENWMExDZU92UWk5bTVrMTZUajZhcTQxMWtmaXNQWXlNS1AraEIzSFJ2T01UQ0JORmY1CnNlTDl4Vkp5UDF0ZmtjVmhzM0FkWE0wb0ZLbDJrazJML1dWK3FMMisrajZZTmxURzhqUTJ2cElQdnlVOEJIc1EKV29OdUtnMGQ3VEpXNDZiV0tFdUVDdDRUUEFQd3dHVDMyTHBLYnlPMmdpZFd1L1J5eWR3QUJrY3ZQYVVEODFSOQpVWEMzYUY1Z3BzRGRCMUcwZWJGSFpNaTkyaHJHOXhCc05rR3FDUFByQUVtNWF4VlBJUmN1d1hJdTBZM0FaalZmCktPVG4xVmQ3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdkM5YVp0M0YwQTV0OW5nNThCeWo2bEo0VVBabmRGVnVETmlreDM2ei81QUxQRlIwCi9ES1RXYWdkekRISVM0ckxaSm1vYnlCODk1UkFYMDFwUTVtNUEvelBSYW1GMDRsVTNtcEFlVXg5VE43aW5VNHYKSzU1c0RLU1ZVb1F0bFdxYXNjNTdvOTk3c3h4WmlCd0JEcU56YjlPU0NzRlRTZW93L0VkaUlrcFVvSkhDeVVwcgpndGp5WVBxc0JBTGNVdlJKdFNxbUVnTFBIN05kYnEwQnB3UUJJY1lYOW1aeUJLTFRyWnZkdTRWbERqSVhVTEk3CmdueXRqRDh1eE0xV053V1ZWMktPTnJFM0RBUXp3STk2Y0M2SFdZUW85NUQ2cER6UjRwaEhNeElyZDBIZ2Y5RkEKaU1TL2dDUnZJNFAyMEFFQjRXSUVFVUtrZXJXdGlzWGpFMHRSVndJREFRQUJBb0lCQURsc1FhdXQ5SlNlTXBQSQo3L1VDNkVteVRLQjM3KzJodStrVG1vUjlkek4rb3M4UC9ucU9mRVFaZHE0K2FwNFNoaW4yY1YwbmpycUZkSGNnClNnU2t2YjRud0ovRE1PRHh3UUgxYmlNVllnNjQzSEdmeitrQmVIc0xKYjErTStLcUd2WXl5YXVob0Q5eFlTaVYKVXdWQ2Z4RWFnQy9qK2lSTjRCQzdQNGl6SWN1MDU5ZnVYQTJvUkp3SlVvNmtaeGVoMnY1dDVIUjNmNDdtWTRWUAo2ZC85a09BWmxKNUw0VWhxdkRzZ0h3VmVCakxLMlMyMnB2ckhsdXY5Rk5laGtHWGJtYlVscnJLZW1xek1FNjRICnRkQ0pjRnlTTEk2b05IbHBVUjUxZTB6Ulp0aFQyRnRjeXUrY1dYWm1VVmZTSHUxRHoyTi9SMGRsNUt1N25yRm4KQUR4dnBmRUNnWUVBd3lCUGtDTG9mZkNkUWZEd1pvSElTS1c3TS83L29pb3ozMmhLZHFHdmsyejJuN0ZOaGJvZApPNXI4dWdLM1cvZ2QrMkNKckxtL3pRaGtjWGtYSk56dVFVY3FmN0dTZ0dzN0xUd09RK016UkZPV2doMytIa2NoCllmQVdKck8vMDd2S3N5N3NLVUNkT3kvY0RTMmtlU0lYWHdtanJrYkRDUzgvTFhEaGM2a2hzSlVDZ1lFQTl1U3UKdHhIekk4TG9qb0hrcjYyc3MwQWV2Q25adVltY0NLUWFuRG9hbE01QTU5SmtPYndyMzlhbjYxb0N3Yml4VHlsaAozMzJjMDVESW9MYlQzYU9TREFpbC93QkFhbGNRM0RINFN1Yk9DVU4rNFhHS2JFNWpiTWFEOHFPckZlTE96a29ZCmNpUGllb1lhSmRGNUdNTU5DVHg3Sk9HblhkUHJ1cVFmM1FiR1l6c0NnWUJ0Y2JjT3VuVzdCZlcrb2J6RlVqQWIKaDFITUpWQVBEaXJRT1RmaStHZDVnbG1HVXJXUHQwZGtRbGRVb2Vka24zTjVwcmt4OTNHOE4rUFd2YnVjZ29yawpkRjFEQ0QrSzVocG9FZEpTZzZJaXhkdWFtZVlKNTQyeTJDNGtnUmVzVkIycWlUd1BHMTNWYjgrMldJNXpId3NLCjFHWkpmd2t3SXA4R0J0Vjl3VFRUVFFLQmdCZjBzbnN5ODZ1Wm91VUk5MzZRVkh5RUVUZGl2Q3lEaks5TjlRTUoKcEVDaURxd3Z2dWZYT1U2YnptbElyNUhLY1BIa2F3bTdiM2NieWt2RjBhTGsxeXZ4dnVHU1RhM0R5dkFDclR2ZgpUMGlZMHZ2ZS8zWm8yTDdhT0QxWDRpYmFmZ1NJTGYwTlBGRjFKNTVaeCswK0o4cW9vcTQrY3ZYb3RTdkQ5dytFCk04VzNBb0dBTVYwblo1QkQ0M0pJUm5mY3U4c0s4OTlrVkV0emcycjVnRGRaZVFYMUhSVzFZcmE2TXZsdUpTc3YKNE9PaVFSUEluMXNGYjNhME9rYlpFOXE0NzIxNDd5VS8xUnNXUDh6L000dHh1OHBRUnhrOVRCUlc1dDMzRFlPLwpQOHFRR1h1anZ4MHRWUVZ4TnZFUzVnalk1bldtSTZqVURvYUhQYlZkdWF0TTdxWFNNYUE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: k8s-us-east-1
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-cilium-endpoint-slice: "true"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/charts/cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: k8s-us-east-1
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/charts/cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/charts/cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/charts/cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
        ad.datadoghq.com/cilium-agent.check_names: '["cilium"]'
        ad.datadoghq.com/cilium-agent.init_configs: '[{}]'
        ad.datadoghq.com/cilium-agent.instances: |
          [
            {
              "agent_endpoint": "http://%%host%%:9962/metrics",
              "use_openmetrics": "true"
            }
          ]
        ad.datadoghq.com/cilium-agent.logs: '[{"service": "cilium-agent", "source": "cilium-agent",
          "sourcecategory": "kubernetes"}]'
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.4@sha256:4b074fcfba9325c18e97569ed1988464309a5ebf64bbc79bec6f3d58cafcb8cf"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/charts/cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
        ad.datadoghq.com/cilium-agent.check_names: '["cilium"]'
        ad.datadoghq.com/cilium-agent.init_configs: '[{}]'
        ad.datadoghq.com/cilium-agent.instances: |
          [
            {
              "operator_endpoint": "http://%%host%%:9963/metrics",
              "use_openmetrics": "true"
            }
          ]
        ad.datadoghq.com/cilium-operator.logs: '[{"service": "cilium-operator", "source":
          "cilium-operator", "sourcecategory": "kubernetes"}]'
      labels:
        io.cilium/app: operator
        name: cilium-operator
        k8s-app: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.12.4@sha256:071089ec5bca1f556afb8e541d9972a0dfb09d1e25504ae642ced021ecbedbd1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/charts/cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.4@sha256:dc5b396e94f986f83ccef89f13a91c29df482d4af491ff3bd4d40c05873d351a"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
