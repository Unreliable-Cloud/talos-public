---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRSk5aaElmV3NKeUxwYzVYVWRMem5ZREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURVeU1qQXlOVGcxTlZvWApEVEkxTURVeU1UQXlOVGcxTlZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTU9JUFh6ajJRVXBDRGpoSSswVTQ4cW4Ka1k2Q1hHdUtpWFgyc29BSFBzdDNiejZweDBzR096Y2hQWEpVWVp3Nk1Wdm04S2FhdnplYzdQTGJKODVlb29iaQpiS0FQNytmdTZYTFlvZXg0NUltTFJta1JsV2RJUTJWSVV6NUUrYmtjU1pqWmpuaXVqUE52amJDalVWeis4dVAxClJheTBOVjZ1RjkzS1JmbjQxZzd1ZnBjczRKajNITTFDclI2VkE1ZU02Rm5IUTVKWENtY0t5OWFpOEZ2bHZSSjMKbm54Sko5Y2gxVVpWQllERDJQd1ZjVHA0dWNLbTR0Uk5wYjFGc2Rpclh2Q2FIMldOVlg0Qk5GaHJVVGd6RjdyLwpZOTlhNXlDeGl2TkZxZTRhSmZjYzFMeUtJQ2pnTjJ1SWE4Z3N6dW5MUzZ4VGs1WlY2SXIyREVONVBEQkM0aGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM0M2hEWFhnRzhFcW5SOEkzMwpib1hjaE1wWFJUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJb1ZZSkZ2UFB0TFFrcllGekRIdVBHR2lSdXQvCmh6dys1S0tCQmk0SUdpd0c2eVV3b2MreEZtMldOWXEyb3ZseE1xanlsT21xSW5QaEZHeDhTcFpaRGtvdVZGWG8KS0VjSG5HbmY4RmlnSjdhdmxPcklQNDZZNFAwZ3FFZlRPc3RHNkt1MHgwR0lpN0QzYVpMeCtEdnBBd1dxMHdETApucHBIU0xJeFhMaWo1cktoVisyVzNxL3laS2lXZDBYSFh2M1Ftc0JQSjZMN1owdWgyV29IZnJQbzJybDlWZE8wCnQzVnZjc3h2L29DdWhBcFZNeHI2SUx1OXdzUXpvU2FXWllodEhxM3liUCtLb05FUFk0R3JxL0ZaVEJieWZWZEYKV0loWTZra1FOalhWOTFOd295RWE2UGRQUXlUekhrWGp4TDgxMmFWb2FVL1kwU1VSTTZKa2RQdHdzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzRnOWZPUFpCU2tJT09FajdSVGp5cWVSam9KY2E0cUpkZmF5Z0FjK3kzZHZQcW5IClN3WTdOeUU5Y2xSaG5Eb3hXK2J3cHBxL041enM4dHNuemw2aWh1SnNvQS92NSs3cGN0aWg3SGpraVl0R2FSR1YKWjBoRFpVaFRQa1Q1dVJ4Sm1ObU9lSzZNODIrTnNLTlJYUDd5NC9WRnJMUTFYcTRYM2NwRitmaldEdTUrbHl6ZwptUGNjelVLdEhwVURsNHpvV2NkRGtsY0tad3JMMXFMd1crVzlFbmVlZkVrbjF5SFZSbFVGZ01QWS9CVnhPbmk1CndxYmkxRTJsdlVXeDJLdGU4Sm9mWlkxVmZnRTBXR3RST0RNWHV2OWozMXJuSUxHSzgwV3A3aG9sOXh6VXZJb2cKS09BM2E0aHJ5Q3pPNmN0THJGT1RsbFhvaXZZTVEzazhNRUxpRndJREFRQUJBb0lCQUdpQjVQdGZmSnI1ZDErUApWZmhkZGZMVzVVRmFBN09tOUJtTXBaTXdUQ3ZMeGpXajROVUVtNW0zdG5QcERkTEdkNk03Sjl5a1VSZVVWRURwClNibFBjMmJNbG1wbW1qOUl2cFdYbTlRY09Xb2FlcU9sdGtqaG9zUDdpQ0o4RTAwUkJYVWdzcmxsOGdnYTA0eFoKZmg5S1ZOL3FORGMraWxmMGpPVUtPNlNEajBXaTJrMTZVL2ZhZmdNbFJrcUdSQzhwZGRwNGhDK0MyRlUvSEJ1SApNbjNkWnVILy9DT3NoUC90M0ZqUHp3YjUwL0IzMHJZclN1VG9qeVVPdld5MG82dGRhaHR3cXI1NlJvTnk5SzlQCnlsNHdiMThjTDNWVEJhT1d4ekI1VEJWVjhDZ2tsYjRldTB1K1FVRjhiS0poc21MSmlVYjB4Tkhxd2Q4L0dNWjMKdXcrNm5RRUNnWUVBeHU3ZGtlK2pZSHptRGdabm1ZN2F1bmtCZlNjRzlkT1JscXVnSXowRkc4dDNpMzFmR2hCRQo4VEZHa2FXM0VyTHFBM09HUG1XaXpWOWcxZFJ0dHM0Z1dkUzZ0VWp0WjdhQTRua1F4RHFheGpKS0c4R1FjVDZCClMyKzRmcWZ1T204R1NzUmwvRUtEb0IySFZHVWM4U0RNdENGUnRsL25kNDRpelBqNEd0QnBlV0VDZ1lFQSs1K2YKYlNwZ1N0LytFYW02YXdSNWJkZUw3bWtvRnZqNkpkd0d3eVRtZ0NGeGROQjhleFFiVlEwYWpuZWVvVE5jN1hTagp0K2VzOTRKeVRmZzBucUljdGRJWWZmZkE1Yks4Q3h3M0JQc1Bkc0I5UjhFcEFwRUlVdDlCRWNyUno0b29nUUVHClZ6ZGJhaFQ4ZFBrU2xGaXQwWkdDN3NxdHl0M2poOEFGT2Y1Qk5uY0NnWUIzaTExODhFdjJsTGZPMzh4cisrdTMKT1RaSzFpUVpuODBTaFFwVGdyektLaWdwbStxRmlCZFY5YTJab3NMMEtxM3o2djFXQzgrY3FOOVJRRG02Sy81RwozVTVoMkhSSjZlTmp0U3I5TU5hSG1mcnMyUklLNjJ2WlFFYlhYZVVNR21IbWxrVlBKVTFoNzd5K1c1RGIya0VKClVpaC9kdnhxM1BCT3lxS1Z3bjVQb1FLQmdRQ2dCTjFRZ1ZpSGhYZUFLQjVqbkk3VXFmVlZndzU1dlpEbnJzdW0KSXJ0cjFOamdYdzRxLzVoNk9FRWhSVFZlY3Rtd01UTkU2MUwyZk1EUWtQNTF1OGJpWW1BdEMvaGltNDQyeXBTNgoyQ2IzY0dhNzBUMlJZa2FXM1YvMlByTzdkck5YaHgxUExlYzJ5VzNidmVKdzhReHBjRTZDS2Vib1VzQTJQb21VClhmdCs5UUtCZ0NvU0taWXZvdU9ic3BPSFFhaGplcE5mS3ZmOWRjSVN1ZC93UE5IWFYrOG5TQ2RrRzFJeTJnU2cKczFUNUpUUi84eEQrUlFLcUsyZi8vdEw5MysvMlBSelQveWlvaHMyOXc2WlFCT2xpVjNJRjVOK05BV1VsSWVwdwo1SnN2NG5CVWVpYllaMGFOZkcvYkNFWlFVZE40OEFUdnZlWlRORktBWE00bmJxLzBKZVdlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRSk5aaElmV3NKeUxwYzVYVWRMem5ZREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURVeU1qQXlOVGcxTlZvWApEVEkxTURVeU1UQXlOVGcxTlZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTU9JUFh6ajJRVXBDRGpoSSswVTQ4cW4Ka1k2Q1hHdUtpWFgyc29BSFBzdDNiejZweDBzR096Y2hQWEpVWVp3Nk1Wdm04S2FhdnplYzdQTGJKODVlb29iaQpiS0FQNytmdTZYTFlvZXg0NUltTFJta1JsV2RJUTJWSVV6NUUrYmtjU1pqWmpuaXVqUE52amJDalVWeis4dVAxClJheTBOVjZ1RjkzS1JmbjQxZzd1ZnBjczRKajNITTFDclI2VkE1ZU02Rm5IUTVKWENtY0t5OWFpOEZ2bHZSSjMKbm54Sko5Y2gxVVpWQllERDJQd1ZjVHA0dWNLbTR0Uk5wYjFGc2Rpclh2Q2FIMldOVlg0Qk5GaHJVVGd6RjdyLwpZOTlhNXlDeGl2TkZxZTRhSmZjYzFMeUtJQ2pnTjJ1SWE4Z3N6dW5MUzZ4VGs1WlY2SXIyREVONVBEQkM0aGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM0M2hEWFhnRzhFcW5SOEkzMwpib1hjaE1wWFJUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJb1ZZSkZ2UFB0TFFrcllGekRIdVBHR2lSdXQvCmh6dys1S0tCQmk0SUdpd0c2eVV3b2MreEZtMldOWXEyb3ZseE1xanlsT21xSW5QaEZHeDhTcFpaRGtvdVZGWG8KS0VjSG5HbmY4RmlnSjdhdmxPcklQNDZZNFAwZ3FFZlRPc3RHNkt1MHgwR0lpN0QzYVpMeCtEdnBBd1dxMHdETApucHBIU0xJeFhMaWo1cktoVisyVzNxL3laS2lXZDBYSFh2M1Ftc0JQSjZMN1owdWgyV29IZnJQbzJybDlWZE8wCnQzVnZjc3h2L29DdWhBcFZNeHI2SUx1OXdzUXpvU2FXWllodEhxM3liUCtLb05FUFk0R3JxL0ZaVEJieWZWZEYKV0loWTZra1FOalhWOTFOd295RWE2UGRQUXlUekhrWGp4TDgxMmFWb2FVL1kwU1VSTTZKa2RQdHdzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRQWJMZFN5N3VrYnJSU3QwdUF3R0s4REFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURVeU1qQXlOVGcxTlZvWApEVEkxTURVeU1UQXlOVGcxTlZvd0xqRXNNQ29HQTFVRUF3d2pLaTVyT0hNdGRYTXRibmxqTVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQysKRWV1VW9UVTFkRzVZUG4xeXlhbVhjYWFwb0xqbUhsN0t3ZHV6Nm94eCtkK2hvdmp5Y1g0ck83bldiSHQzRFIyKwpwWVBGVVVnREJadmVNYXMxbzJ4MCtkYnEzUVVMeXM1VnBjYUNTd0s3TjVBWWxjemZOanFDb2ZQR0NSWWIxMGtzCjJoblJ6TW1PdnEvem8xLzk4L0I1SnlNOU13UTZwNHh1akQ0ZUtpaE9lLzNUaU4zTElvbjhHWlpDWGQwQUtKeUkKeVRxNE1YbWRDNlg5ZU00cDc3ODhmbGZSb3VMbE5Xc1YrSDJWK2FFc2IzdjFUdjZkQ2VJTmtYYVVacHBPUExpNApDb2YvaWZhNjN6VXlqZDJzTjIzOGV3R3RoMTZkMHNKNC9IZm5UZXEzKzM2T3E1Z2hOd29OdVRGaExSUWd1U1FtCmk1dTYvL3ZQejBWaTI4L3Rnam01QWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWQpNQmFBRkxqZUVOZGVBYndTcWRId2pmZHVoZHlFeWxkRk1DNEdBMVVkRVFRbk1DV0NJeW91YXpoekxYVnpMVzU1Cll6RXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDcU9HbjAKdUhZV3FBSlRVQ3VwREpJaEJHcGhaSnh0RFVDZThlakRmdHlUdm96V2UvWndLM1VUdmhIR1YyYUpLMmFTSHZ6NApBMjJRc0dmU2UyNzdlVFcxdkRPWHJKcHJraEhKM2tFYlJNL2xlN0dlZVZzOXFCdHA2aHY0Z3hHb0R1TWQwU3U3CkYxL29KYVVGYlVvc3ErMGJNZ3ZYSnhnZENWdzRRcnNjQ29xZ0htSnVsVHZGUTNENXh1Yy9rS2NEcEJ4SzY2WDIKVmZNZ2xtRUV1QzcrV2FwY3JKZlRCWWNhNmhBQS84TDZPMUxrcTg5dDZYNG12ZDVCd2ticjhYU0dBc043bFgzcgpoTVZIK1dXcU9nc2JOZjVpK0J0aGovN3VwVTMyQ0VEdzVZZFpweVRKcFdHTzgzR1VLVVFoRE1tVkFmQmVzdWwxCkNGUC9UZmw5NWZoWlZPRWYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdmhIcmxLRTFOWFJ1V0Q1OWNzbXBsM0dtcWFDNDVoNWV5c0hicytxTWNmbmZvYUw0CjhuRitLenU1MW14N2R3MGR2cVdEeFZGSUF3V2IzakdyTmFOc2RQblc2dDBGQzhyT1ZhWEdna3NDdXplUUdKWE0KM3pZNmdxSHp4Z2tXRzlkSkxOb1owY3pKanI2djg2TmYvZlB3ZVNjalBUTUVPcWVNYm93K0hpb29UbnY5MDRqZAp5eUtKL0JtV1FsM2RBQ2ljaU1rNnVERjVuUXVsL1hqT0tlKy9QSDVYMGFMaTVUVnJGZmg5bGZtaExHOTc5VTcrCm5RbmlEWkYybEdhYVRqeTR1QXFILzRuMnV0ODFNbzNkckRkdC9Ic0JyWWRlbmRMQ2VQeDM1MDNxdC90K2pxdVkKSVRjS0Ria3hZUzBVSUxra0pvdWJ1di83ejg5Rll0dlA3WUk1dVFJREFRQUJBb0lCQVFDMGtPbXhCWVU3QnlWZApCK0M5ai85aE5FTVVtdStORGdVWHNoczZUUFNud3E1RkxFSThjTDFmN1JtYkx1d01LWlc4YkJsRzl2VG1pZ21OCmlMb1I5dk11SGJ1aTI5M1RXaE96SWczMzhiTGlrT0ovdUxBc3phUEFQb01MKzgzWkhTa1RSdytJVkhpVzkyakkKbU1pMHhXNEthcmY3aDkvWXFSdXNXZWNaV1F0NW9vVFV0cG91eEViakhJM054MWwwZ3lBMlpiRVR1Qjl4c0hjQgp5ZkpoRjRZaGF3djBEUXhNV21qcmorZi9xK0dhMStFMTFJWnJ3eFBDWkd3cUlaSlRPMHNDdkJ6VXhrODRyMjZHCnZlM1h1Z1pkREd3djh0NmRoM0lkOHZQbXVoZjlLSEdIdVN2YUtSWUtwb04rK1lJektndnNMdlVxOHc0ZkFJcmQKUlR1cGVYMUJBb0dCQU1wNVlsUXRMMDN6MTdzTkw4ZU5vdlBucTNwZnZ4Y3BXbU1mQmxmWEpweGFEbVBBeVB4VAphVEthZ3N1NWlSc0EzVStZWExGZ0VCVElURDBlZks1Tzd4ZTNFRmI5NC9EV2ZxM3cwa0oraTVOamV1RzZCOW1aCmRPRjR6RE5GN3IvN3IwR2dYd1FkYitPUkMzelZLV25vei9UYVpXSDg0a21YeDB2RGl0L0VCMGZGQW9HQkFQQlIKRXZRYlVSTSs3ZzNqWm1icEl2a0lndnhhK1lqSVpVbjIvN0Y0cDltMURnVjRld2d5dlEwV0tJYkpxRXFKdmNaRQp2dDdUeGd0ckdSNStRd09sSGVnUVN4QmE3VjdzdUtmTCtDVlByei8zSGJtQUUyc1lQaXVWTmpzVmg2SFpVMFF1CjhSblFyRG03TlZZTlNPdEgxS21XMzVSWG1aYVVSYlhGTmNONi9OVmxBb0dCQU1SMHRMQ2lTd1RpOVU1Y1JDRG0KejliQzBjSmlSb0tOc0ZMKzFtUENzWWNCWm5icHB0b1ZnTHdGNmFVTWQvakloUFBuRFFGYUNTQnhISEF0TmFMWAptZXV6eDFudzdRdFF4QWUzNC90NjE2a0IzRWhLL2JUbnpkMjhITDRmTzhIeHppSHFIbWRhdktiY3BIM1NRbVd0CjdLRlNpdzVobFpyOGR2YVBYQjgwRURCVkFvR0FQVTZCaGxLOXNTbzVzc05UYVdlS2EzdVhadWVTaHltUVpYa2sKcTlLN0IxZ2dGcGN3MDl1VnpSUGRETjIvR0J6aGxBWVBwMnJoT0NKL1N2OHMrMjRSSGhXaUFLOGhwVGpBdHRYYgpIVEdoNUxDWEhhNmx4WWx1dXRHYS95R3o4ejhzOWRULzN2VVVLcm91bGlCWGZPWmJRMVJnLzBnRnY1dGQyVXhSCk5laFhQZDBDZ1lFQWpTYmkvVHh3M2hic1diUWZtZlp5NS9KSGczaUlGZnBTR1czR1dMTjFQQVhqZ3R2NUovZFIKUUdCRC9jNzBhZ2tHK0QrbUdKWmJ5T1ZmL09DNWJJSjFxc0RlSDBLR2hQS1ZGdHRTY001U1kvZloyNWgrT2FGVgowdzNWVFRYZXlzMkJTSTIzUnh3czhnTENOQXZGb0ZabEprTHd1eDBnVHFUM2JVNmxsd3JreFpVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: k8s-us-nyc1
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "partial"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "true"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-cilium-endpoint-slice: "true"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.3@sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.3@sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.3@sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.3@sha256:5b81db7a32cb7e2d00bb3cf332277ec2b3be239d9e94a8d979915f4e6648c787
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
